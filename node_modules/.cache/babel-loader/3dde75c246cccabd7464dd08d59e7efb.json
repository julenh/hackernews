{"ast":null,"code":"var _jsxFileName = \"/home/julen/IdeaProjects/hackernews/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Table } from './components/Table.js';\nimport { Button } from './components/Button.js';\nimport { Search } from './components/Search.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_QUERY = 'react';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: DEFAULT_QUERY,\n      result: null\n    };\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n  }\n\n  onSearchSubmit(event) {\n    const {\n      searchTerm\n    } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n  }\n\n  setSearchTopStories(result) {\n    this.setState({\n      result\n    });\n  }\n\n  fetchSearchTopStories(searchTerm) {\n    let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`).then(response => response.json()).then(result => this.setSearchTopStories(result)).catch(error => error);\n  }\n\n  componentDidMount() {\n    const {\n      searchTerm\n    } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onDismiss(id) {\n    console.log(id);\n\n    function isNotID(item) {\n      return item.objectID !== id;\n    }\n\n    const updatedList = this.state.result.hits.filter(isNotID);\n    this.setState({\n      result: { ...this.state.result,\n        hits: updatedList\n      }\n    });\n  }\n\n  onSearchChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      result,\n      searchTerm\n    } = this.state;\n    const page = result && result.page || 0; //if (!result) return null;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interacions\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          value: searchTerm,\n          onChange: this.onSearchChange,\n          onSubmit: this.onSearchSubmit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), result && /*#__PURE__*/_jsxDEV(Table, {\n        list: result.hits,\n        onDismiss: this.onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interactions\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.fetchSearchTopStories(searchTerm, page + 1),\n          children: \"More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*\nconst Search = ({\n\n                    value,\n                    onChange,\n                    onSubmit,\n                    children}) =>\n    <form onSubmit={onSubmit}>\n        <input type=\"text\"\n               value={value}\n               onChange={onChange}\n        />\n        <button type=\"submit\">\n            {children}\n        </button>\n    </form>;\n\n\n\nconst Table = ({list, onDismiss}) =>\n    <div className=\"table\">\n\n        {list.map(item =>\n        {return <div key={item.objectID} className=\"table-row\">\n             <span style={{ width: '40%' }}>\n                <a href={item.url}>{item.title}</a>\n                </span>\n            <span style={{ width: '30%' }}>\n                {item.author}\n                </span>\n            <span style={{ width: '10%' }}>\n                    {item.num_comments}</span>\n            <span style={{ width: '10%' }}>\n                    {item.points}\n                        </span>\n            <span style={{ width: '10%' }}>\n                        <Button\n                            onClick={() => onDismiss(item.objectID)}\n                            className=\"button-inline\"\n                        > Dismiss\n                        </Button>\n                        </span>\n        </div>;\n        })}\n    </div>\n\n\nconst Button= ({onClick, className = '', children}) =>\n    <button\n        onClick={onClick}\n        className={className}\n        type=\"button\"\n    >{children}\n    </button> */\n\n\nexport default App;","map":{"version":3,"names":["React","Component","Table","Button","Search","DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","App","constructor","props","state","searchTerm","result","onDismiss","bind","onSearchChange","setSearchTopStories","fetchSearchTopStories","onSearchSubmit","event","preventDefault","setState","page","fetch","then","response","json","catch","error","componentDidMount","id","console","log","isNotID","item","objectID","updatedList","hits","filter","target","value","render"],"sources":["/home/julen/IdeaProjects/hackernews/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nimport {Table} from './components/Table.js';\nimport {Button} from './components/Button.js';\nimport {Search} from './components/Search.js';\n\nconst DEFAULT_QUERY = 'react';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            searchTerm: DEFAULT_QUERY,\n            result: null,\n        }\n        this.onDismiss = this.onDismiss.bind(this);\n        this.onSearchChange = this.onSearchChange.bind(this);\n        this.setSearchTopStories = this.setSearchTopStories.bind(this);\n        this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n        this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    }\n\n    onSearchSubmit(event){\n        const {searchTerm} = this.state;\n        this.fetchSearchTopStories(searchTerm);\n        event.preventDefault();\n\n    }\n    setSearchTopStories(result){\n        this.setState({result});\n    }\n    fetchSearchTopStories(searchTerm, page=0) {\n        fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`)\n            .then(response => response.json())\n            .then(result => this.setSearchTopStories(result))\n            .catch(error => error);\n    }\n\n\n    componentDidMount() {\n        const {searchTerm} = this.state;\n        this.fetchSearchTopStories(searchTerm);\n    }\n\n\n    onDismiss(id) {\n        console.log(id);\n        function isNotID(item) {\n            return item.objectID !==id;\n        }\n        const updatedList=this.state.result.hits.filter(isNotID);\n        this.setState({\n            result : { ...this.state.result, hits: updatedList }\n        })\n\n    }\n\n    onSearchChange(event) {\n        console.log(event.target.value);\n        this.setState({ searchTerm: event.target.value});\n    }\n\n    render(){\n        const {result, searchTerm} = this.state;\n        const page = (result && result.page) || 0;\n        //if (!result) return null;\n        return(\n            <div className=\"page\">\n                <div className=\"interacions\">\n\n                <Search value={searchTerm}\n                        onChange={this.onSearchChange}\n                        onSubmit ={this.onSearchSubmit}>\n                    Search\n                </Search>\n                </div>\n                {result &&\n                <Table list={result.hits}\n                       onDismiss={this.onDismiss}/>\n                }\n                <div className={\"interactions\"}>\n                    <Button onClick={() => this.fetchSearchTopStories(searchTerm, page + 1)}>\n                        More\n                    </Button>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n/*\nconst Search = ({\n\n                    value,\n                    onChange,\n                    onSubmit,\n                    children}) =>\n    <form onSubmit={onSubmit}>\n        <input type=\"text\"\n               value={value}\n               onChange={onChange}\n        />\n        <button type=\"submit\">\n            {children}\n        </button>\n    </form>;\n\n\n\nconst Table = ({list, onDismiss}) =>\n    <div className=\"table\">\n\n        {list.map(item =>\n        {return <div key={item.objectID} className=\"table-row\">\n             <span style={{ width: '40%' }}>\n                <a href={item.url}>{item.title}</a>\n                </span>\n            <span style={{ width: '30%' }}>\n                {item.author}\n                </span>\n            <span style={{ width: '10%' }}>\n                    {item.num_comments}</span>\n            <span style={{ width: '10%' }}>\n                    {item.points}\n                        </span>\n            <span style={{ width: '10%' }}>\n                        <Button\n                            onClick={() => onDismiss(item.objectID)}\n                            className=\"button-inline\"\n                        > Dismiss\n                        </Button>\n                        </span>\n        </div>;\n        })}\n    </div>\n\n\nconst Button= ({onClick, className = '', children}) =>\n    <button\n        onClick={onClick}\n        className={className}\n        type=\"button\"\n    >{children}\n    </button> */\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}